export PATH=$HOME/.bin:$HOME/.cabal/bin:$PATH
export PYTHONPATH=$HOME/.bin
export TEXINPUTS=".:$HOME/Documents/Repository/:"

# silence annoying warnings from grep
unset GREP_OPTIONS

[ -e /opt/intel/composerxe/bin/compilervars.sh ] && source /opt/intel/composerxe/bin/compilervars.sh intel64

# Check for an interactive session
[ -z "$PS1" ] && return

# enable tab completion for tar on all types of files
complete tar && compopt -o default tar

# git
__git_ps1 ()
{
    local foo="bar"
}
[ -e $HOME/.git-prompt.sh ] && source $HOME/.git-prompt.sh
[ -e $HOME/.bash-completion-git ] && source $HOME/.bash-completion-git

alias ls="ls --color=auto"
alias gdb="gdb -q"
alias cgdb="cgdb -q"

alias gl="git log --pretty=format:'%C(yellow)%h %Cred%ad %Creset%s' --date=format:'%Y/%m/%d %H:%M'"

# python virtualenv
export VIRTUAL_ENV_DISABLE_PROMPT=1
venv-activate() {
    # alias doesn't work: http://stackoverflow.com/a/13261212

    . $(find-venv .)

    INVENV=$(python <<'EOF'
import sys
bp = getattr(sys, "base_prefix", sys.prefix) != sys.prefix
rp = hasattr(sys, "real_prefix")
print(1 if bp or rp else 0)
EOF
    )
    if [ "$INVENV" = "1" ] ; then

        export _OLD_VIRTUAL_PS1="$PS1"  # for deactivate()
        PS1="\[\e[1;92m\][v] $PS1"

        # http://stackoverflow.com/a/677212
        if hash crystallize 2>/dev/null; then
            eval "$(_CRYSTALLIZE_COMPLETE=source crystallize)"
        fi
    fi
}
p() {
    bpython
}

# pretty print tsv
alias catt="column -s $'\t' -t"

# disable XON/XOFF, to use CTRL-S/Q
stty -ixon

# automatically fit to window size
shopt -s checkwinsize

# color grep
if echo hello|grep --color=auto l >/dev/null 2>&1; then
    alias grep='grep --color=auto'
    export GREP_COLORS="ms=01;37;41:mc=01;31:sl=:cx=:fn=4;34:ln=32:bn=32:se=1;31"
fi

# PS1
PS1_NAME="home"
[ -e $HOME/.ps1-name ] && source $HOME/.ps1-name

case "$PS1_NAME" in
    "home")
        PS1='\[\e[0;33m\]\h \[\e[0;34m\]\w\[\e[1;36m\]$(__git_ps1 " [%s]") \[\e[0;33m\]\$ \[\e[0m\]';;
    "home-git")
        PS1='\[\e[1;30m\]\u\[\e[m\] \[\e[0;34m\]\w\[\e[m\]$(__git_ps1 " [%s]") \[\e[1;30m\]\$\[\e[m\] \[\e[0m\]';;
    "home-root")
        PS1='\[\e[0;32m\]\u\[\e[m\] \[\e[0;34m\]\w\[\e[m\]$(__git_ps1 " [%s]") \[\e[0;32m\]\$\[\e[m\] \[\e[0m\]';;
    "thinkpad")
        PS1='\[\e[1;35m\]\h \[\e[0;34m\]\w\[\e[1;36m\]$(__git_ps1 " [%s]") \[\e[1;35m\]\$ \[\e[0m\]';;
    "xps")
        PS1='\[\e[1;35m\]\h \[\e[0;34m\]\w\[\e[1;36m\]$(__git_ps1 " [%s]") \[\e[1;35m\]\$ \[\e[0m\]';;
    "office")
        PS1='\[\e[0;36m\]\h \[\e[1;35m\]\w\[\e[1;36m\]$(__git_ps1 " [%s]") \[\e[0;33m\]\$ \[\e[0m\]';;
    "office-root")
        PS1='\[\e[1;35m\]\u \[\e[0;36m\]\w\[\e[1;36m\]$(__git_ps1 " [%s]") \[\e[0;33m\]\$ \[\e[0m\]';;
    "conformal")
        PS1='\[\e[1;31m\]\h \[\e[1;35m\]\w\[\e[1;36m\]$(__git_ps1 " [%s]") \[\e[0;33m\]\$ \[\e[0m\]';;
esac

if test "$TERM" = "xterm" -o \
        "$TERM" = "xterm-color" -o \
        "$TERM" = "xterm-256color" -o \
        "$TERM" = "rxvt" -o \
        "$TERM" = "rxvt-unicode" -o \
        "$TERM" = "xterm-xfree86"; then
    PROMPT_COMMAND='echo -ne "\033]0;${PWD/$HOME/~}\007"'
    export PROMPT_COMMAND
fi

if type "register-python2-argcomplete" > /dev/null 2>&1; then
    eval "$(register-python2-argcomplete rr)"
    eval "$(register-python2-argcomplete mc)"
    eval "$(register-python2-argcomplete jack)"
    eval "$(register-python2-argcomplete d-monroe)"
    eval "$(register-python2-argcomplete d-st)"
fi

[ -e /usr/share/bash-completion/completions/pass ] && source /usr/share/bash-completion/completions/pass

[ -e /etc/profile.d/vte.sh ] && source /etc/profile.d/vte.sh
