#!/usr/bin/env python2

import sys
import os
import subprocess
import time
import fnmatch

_root=os.path.dirname(os.path.abspath(__file__))
_home=os.path.expanduser('~')

def execute(args,cwd=None,assert_silence=False):
    p=subprocess.Popen(args, shell=False, stdout=subprocess.PIPE, stderr=subprocess.PIPE, cwd=cwd)
    stdo,stde=p.communicate()
    code=p.returncode
    if assert_silence:
        assert len(stdo)==0 and len(stde)==0 and code==0
    return stdo,stde,code

def main():
    source_bundle=[name for name in os.listdir(_root) if name[0]=='_']
    source_single=[]
    for path in os.listdir(_root):
        if path[0]=='-':
            for dirpath,dirnames,filenames in os.walk(path):
                source_single+=[os.path.join(dirpath,filename) for filename in filenames]

    source=source_bundle+source_single
    target=['.%s'%name[1:] for name in source]
    backup=[name for name in target if os.path.exists(os.path.join(_home,name))]

    if len(backup)>0:
        print 'Creating backup'
        tarball=os.path.join(_root,time.strftime('backup-%y%m%d.%H%M%S.tar.bz2'))
        stdo,stde,code=execute(['tar','jcvf',tarball]+backup,cwd=_home)
        if stdo!=''.join('%s\n'%name for name in backup) or len(stde)>0 or code!=0:
            print stdo
            print stde
            print 'Exit status %d'%code
            sys.exit(code)

        print 'Removing files to overwrite'
        execute(['rm','-rf']+backup,cwd=_home,assert_silence=True)

    print 'Creating symlinks'
    for original,symlink in zip(source,target):
        original=os.path.join(_root,original)
        print original,'==>',symlink
        dirname=os.path.dirname(symlink)
        basename=os.path.basename(symlink)
        if len(dirname)>0:
            execute(['mkdir','-p',dirname],cwd=_home,assert_silence=True)
            execute(['ln','-s',original,basename],cwd=os.path.join(_home,dirname),assert_silence=True)
        else:
            execute(['ln','-s',original,symlink],cwd=_home,assert_silence=True)

if __name__=='__main__':
    main()
