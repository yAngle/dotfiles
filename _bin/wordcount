#!/usr/bin/env python2

import os
import sys
import subprocess
import argparse
import re
from time import strftime

from utils import mkdir, execute

def process(a):
    # see 
    text = ''
    with open(a.texfile) as f:
        for line in f: # line contains '\n'
            if any(s in line for s in (r'\maketitle', r'\includegraphics')):
                continue

            if r'\documentclass' in line:
                line = r'\documentclass[aps,letterpaper,prl,twocolumn,showpacs,superscriptaddress,nofootinbib]{revtex4}' + '\n'
            elif r'\end{document}' in line:
                line = ''
            elif r'\bibliography' in line:
                line = r'\end{document}' + '\n' + line
            text += line

    text = re.sub(r'\\usepackage(\[.*\])?\{hyperref\}', '', text, flags=re.M|re.S)

    equations = ['equation', 'eqnarray', 'gather', 'multline', 'split', 'align', 'flalign', 'alignat']
    equations += [s + r'\*' for s in equations]
    for s in equations:
        text = re.sub(r'\\begin\{%s\}.*?\\end\{%s\}' % (s, s), '', text, flags=re.M|re.S)
    text = re.sub(r'\\\[.*?\\\]', '', text, flags=re.M|re.S)

    path = '/tmp/wordcount-' + strftime('%Y%m%d-%H%M%S')
    mkdir(path)
    os.chdir(path)
    with open('source.tex', 'w') as f:
        f.write(text)

    cmd = r"echo 'source.tex' | latex '%s\csname ?\endcsname'" % os.path.expanduser('~/.dotfiles/wordcount.tex')
    stdo, stde, code = execute(cmd)
    assert code == 0, 'latex failed'

    stdo, stde, code = execute(r"grep -c '3[.]0863[35]' wordcount.log")
    assert code == 0, 'word count failed'
    word = int(stdo.rstrip('\n'))

    stdo, stde, code = execute(r"grep -c '3[.]0863[23]' wordcount.log")
    assert code == 0, 'char count failed'
    char = int(stdo.rstrip('\n'))

    print '%d words, %d chars' % (word, char)

if __name__=='__main__':
    description = 'Estimate the number of words in a LaTeX document. ' \
            'See http://publish.aps.org/authors/length-guide-faq for details. ' \
            'Not yet implemented: ' \
            'Commenting out the rows (but not the caption) of any tables, ' \
            'and commenting out the acknowledgment.'
    parser = argparse.ArgumentParser(formatter_class=argparse.ArgumentDefaultsHelpFormatter, add_help=True,
                                   description=description)
    parser.add_argument('texfile', default=None, help='filename of the TeX source')
    a = parser.parse_args()
    process(a)

