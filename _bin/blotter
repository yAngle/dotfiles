#!/usr/bin/python2

"""
A minimal web browser
"""

import sys

from PyQt5.QtCore import Qt, QUrl, QSize
from PyQt5.QtWidgets import (
    QAction, QApplication, QLineEdit, QMainWindow, QStyle, QToolBar,
)
from PyQt5.QtWebEngineWidgets import QWebEngineView


class Blotter(QMainWindow):
    def __init__(self, url=None):
        QMainWindow.__init__(self)
        self.setWindowTitle("Blotter")

        # Web view.
        self.web = QWebEngineView()
        if url:
            self._set_url(url)
        self.setCentralWidget(self.web)

        # Navigation bar.
        nav = QToolBar()
        nav.setMovable(False)
        nav.toggleViewAction().setEnabled(False)
        nav.setIconSize(QSize(20, 20))
        self.addToolBar(nav)

        # Back button.
        back = QAction(self.style().standardIcon(QStyle.SP_ArrowBack),
                       'Back', nav)
        back.triggered.connect(self.web.back)
        nav.addAction(back)

        # Forward button.
        forward = QAction(self.style().standardIcon(QStyle.SP_ArrowForward),
                          'Forward', nav)
        forward.triggered.connect(self.web.forward)
        nav.addAction(forward)

        # Refresh button.
        refresh = QAction(self.style().standardIcon(QStyle.SP_BrowserReload),
                          'Reload', nav)
        refresh.triggered.connect(self.web.reload)
        refresh.setShortcut(Qt.Key_F5)
        nav.addAction(refresh)

        # Address bar.
        self.addr = QLineEdit()
        self.addr.setClearButtonEnabled(True)
        self.addr.setTextMargins(5, 0, 0, 0)
        self.addr.returnPressed.connect(
            lambda: self._set_url(self.addr.text()))
        self.web.urlChanged.connect(
            lambda v: self.addr.setText(v.url()))
        nav.addWidget(self.addr)

    def _set_url(self, url):
        url = QUrl(url)
        if not url.scheme():
            url.setScheme('http')
        self.web.setUrl(url)


if __name__ == "__main__":
    app = QApplication(sys.argv)
    blotter = Blotter(sys.argv[1] if sys.argv[1:] else None)
    blotter.show()
    exit(app.exec_())
