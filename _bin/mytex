#!/usr/bin/python2

def find_master(filename):
    """find the master .tex file"""
    with open(filename) as f:
        line = f.readline().rstrip(' \t\r\n')

    header = r'%MASTER='
    if line.startswith(header):
        return line[len(header):]
    else:
        return filename

def prepare_temp(temp):
    """create symlinks in temp folder"""
    from utils import mkdir
    mkdir(temp)

    from os.path import abspath, dirname, join
    parent = dirname(abspath(temp))
    from os import listdir, symlink, remove
    from errno import EEXIST

    for f in listdir(parent):
        if f != temp and not any(f.endswith(ext) for ext in ('.pdf', '.aux', '.log', '.out')):
            source = join(parent, f)
            target = join(parent, temp, f)
            try:
                symlink(source, target)
            except OSError, e:
                if e.errno == EEXIST:
                    remove(target)
                    symlink(source, target)
                else:
                    raise

from argh import arg
@arg('filename', type=str, help='.tex filename')
@arg('--temp', type=str, help='path for temporary file', default='.tmpTeX')
@arg('--latex', action='store_true', help='use latex rather than pdflatex', default=False)
@arg('-x', '--xelatex', action='store_true', help='use xelatex rather than pdflatex', default=False)
def run(filename, temp, latex, xelatex):
    """compile LaTeX without littering"""
    filename = find_master(filename)
    prepare_temp(temp)

    mode = '-m pdftex'
    if latex:
        mode = ''
    if xelatex:
        mode = '-m xelatex'

    from utils import execute
    command = r'rubber --into .tmpTeX -fsq %s "%s"' % (mode, filename)
    execute(command, choke=True)

    from os.path import join, basename, splitext
    name = basename(splitext(filename)[0])
    if latex:
        execute('dvipdf %s %s' % (join(temp, name + '.dvi'), name + '.pdf'), choke=True)
    else:
        execute('cp "%s" .' % join(temp, name + '.pdf'), choke=True)

if __name__ == '__main__':
    from argh.helpers import ArghParser
    parser = ArghParser()
    parser.set_default_command(run)
    parser.dispatch()
