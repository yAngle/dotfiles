#!/bin/bash

# automatically recompile TeX on change

if [ $# -lt 1 ]
then
    echo "Usage: $(basename $0) [options for mytex] document.tex"
    exit 1
fi

# single-instance trick adopted from http://stackoverflow.com/a/185473
DIRNAME=`dirname "${@: -1}"`
FULLDIRNAME="`cd \"$DIRNAME\" 2>/dev/null && pwd || echo \"$DIRNAME\"`/.mytexmk"
mkdir -p ${FULLDIRNAME}
LOCKFILE=${FULLDIRNAME}"/lock"
ERRORMSG=${FULLDIRNAME}"/mesg"
if [ -e ${LOCKFILE} ] && kill -0 `cat ${LOCKFILE}`; then
    if [[ -a ${ERRORMSG} ]]; then # file exists
        if [[ -s ${ERRORMSG} ]]; then # file is non-empty
            cat ${ERRORMSG}
            exit 1
        else # file is empty
            echo Compile finished without error
            exit 0
        fi
    else # file doesn't exist
        echo "Can't open latex error message!"
        exit 1
    fi
fi

# claim the lockfile, and make sure it is removed on exit
trap "rm -f ${LOCKFILE}; exit" INT TERM EXIT
echo $$ > ${LOCKFILE}

# create/clear compile errormsg
cat /dev/null > ${ERRORMSG}

# find the files to monitor -- right now only .tex files; no subfolders are monitored
TEXFILES="`cd \"$DIRNAME\" 2>/dev/null && pwd || echo \"$DIRNAME\"`/*.tex"
COUNT=$(ls ${TEXFILES} 2> /dev/null | wc -l)
while true; do
    if [ "${COUNT}" != "0" ]; then
        inotifywait -qq -e CLOSE_WRITE ${TEXFILES}
        mytex $@ > ${ERRORMSG}
        if [ $? -eq 0 ]; then
            cat /dev/null > ${ERRORMSG}
        fi
    else
        echo "No TeX file found!"
        exit 1
    fi
done

# clean up
rm -f ${LOCKFILE}
exit 0
