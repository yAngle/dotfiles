#!/usr/bin/env python2
# -*- coding: utf-8 -*-

import cPickle as pickle
import os
import os.path as op

try:
    import numpy as np
except:
    pass

try:
    import sh
except:
    pass


def pp(x, precision=3, threshold=10, suppress=True):
    """Pretty print x"""
    import subprocess

    # show type and length / shape
    if isinstance(x, np.ndarray):
        length = x.shape
    else:
        try:
            iter(x)
            try:
                length = len(x)
            except TypeError:  # generators
                print x
                return
        except:  # not iterable
            length = None

    if length is None:
        print type(x)
    else:
        print '<%s, %s %s>' % (
            str(type(x))[1:-1],
            'shape' if isinstance(x, np.ndarray) else 'length',
            length
        )

    # pretty print
    _, ncol = map(int, subprocess.check_output(['stty', 'size']).split())

    printoptions = np.get_printoptions()
    np.set_printoptions(precision=precision, threshold=threshold,
                        suppress=suppress, linewidth=ncol)
    try:
        from IPython.lib.pretty import pprint
        pprint(x, max_seq_length=10, max_width=ncol)
    except ImportError:
        from pprint import pprint
        pprint(x, width=ncol)
    finally:
        np.set_printoptions(**printoptions)
